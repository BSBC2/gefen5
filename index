<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ShacharBot</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
  <div class="w-full max-w-md bg-white shadow-xl rounded-2xl flex flex-col overflow-hidden">
    <header class="bg-indigo-600 text-white text-xl font-semibold p-4">ShacharBot</header>

    <!-- Chat area -->
    <div id="chat" class="flex-1 p-4 space-y-3 overflow-y-auto"></div>

    <!-- Input area -->
    <form id="chat-form" class="flex border-t">
      <input id="message-input" type="text" placeholder="Type your message..." class="flex-1 p-3 focus:outline-none" autocomplete="off" />
      <button type="submit" class="bg-indigo-600 text-white px-4">Send</button>
    </form>
  </div>

  <script>
    const chat = document.getElementById('chat');
    const form = document.getElementById('chat-form');
    const input = document.getElementById('message-input');

    // Your n8n webhook URL
    const webhookUrl = 'https://shacharb8.app.n8n.cloud/webhook/e36e83cf-8546-4a7f-b187-8572e4610282';

    // Helper to append chat bubbles
    function appendMessage(text, sender) {
      const bubble = document.createElement('div');
      bubble.className = `p-3 rounded-lg max-w-[75%] whitespace-pre-line ${
        sender === 'user' ? 'bg-indigo-600 text-white ml-auto' : 'bg-gray-200 text-gray-900 mr-auto'
      }`;
      bubble.textContent = text;
      chat.appendChild(bubble);
      chat.scrollTop = chat.scrollHeight; // keep latest message in view
    }

    // Submit handler
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const text = input.value.trim();
      if (!text) return;

      appendMessage(text, 'user');
      input.value = '';

      try {
        const res = await fetch(webhookUrl, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ message: text })
        });

        if (!res.ok) throw new Error('Network response was not ok');
        const data = await res.json();
        // Expecting n8n to return a JSON with a "reply" field (adjust if different)
        appendMessage(data.reply || JSON.stringify(data), 'bot');
      } catch (err) {
        console.error(err);
        appendMessage('Oops! Something went wrong. Please try again later.', 'bot');
      }
    });
  </script>
</body>
</html>
